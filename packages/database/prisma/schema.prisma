generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @map("updated_at")
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @map("updated_at")
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model game {
  id         Int       @id @default(autoincrement())
  winner     String?   @db.VarChar(5)
  end_reason String?   @db.VarChar(16)
  pgn        String?
  white_id   String?
  white_name String?   @db.VarChar(32)
  black_id   String?
  black_name String?   @db.VarChar(32)
  started_at DateTime  @db.Timestamp(6)
  ended_at   DateTime? @default(now()) @db.Timestamp(6)
}

model Profile {
  id         String    @id(map: "user_pkey")
  name       String    @unique(map: "user_name_key")
  email      String?
  wins       Int?      @default(0)
  losses     Int?      @default(0)
  draws      Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@map("profiles")
}
